name: Build and Push Halo Docker Image

on:
  push:
    branches: [ "main" ]
    paths:
      - "application/**"
      - "api/**"
      - "Dockerfile"
      - "build.gradle"
      - "settings.gradle"
  pull_request:
    branches: [ "main" ]
    paths:
      - "application/**"
      - "api/**"
      - "Dockerfile"
      - "build.gradle"
      - "settings.gradle"
  # 添加手动触发选项
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: arthascnhub/arthasdevhalo
  # 使用更有意义的版本号命名策略
  VERSION: ${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}

# 修改run-name，移除对secrets的引用
run-name: Docker构建和推送任务

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便正确生成版本号

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'  # 启用Gradle缓存

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Set up pnpm 9
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test
          ls -lh application/build/libs/*.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        # 只在主分支推送或手动触发时登录
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64  # 支持多架构
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 添加构建参数
          build-args: |
            JAR_FILE=application/build/libs/*.jar
