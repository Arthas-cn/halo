name: Build and Push Halo Docker Image

on:
  push:
    branches: [ "main" ]

env:
  PNPM_HOME: /home/runner/.local/share/pnpm
  NPM_GLOBAL_BIN: /usr/local/lib/node_modules/.bin

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ===== 关键修复步骤 =====
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dir: ./ui
        env:
          PATH: ${{ env.PNPM_HOME }}:${{ env.NPM_GLOBAL_BIN }}:${{ env.PATH }}

      - name: Install pnpm via corepack
        run: |
          # 强制清理旧版本
          npm uninstall -g pnpm || true
          
          # 完整安装流程
          sudo npm install -g corepack --force
          corepack enable --install-directory=$PNPM_HOME
          corepack prepare pnpm@9.0.0 --activate
          
          # 路径三重保障
          echo "$PNPM_HOME" >> $GITHUB_PATH
          echo "$NPM_GLOBAL_BIN" >> $GITHUB_PATH
          echo "$HOME/.npm-global/bin" >> $GITHUB_PATH

          # 权限修复
          sudo chmod -R 777 $PNPM_HOME
          sudo chmod -R 777 $(npm root -g)

      # ===== 验证步骤 =====
      - name: Verify Installation
        run: |
          echo "=== PATH ==="
          echo $PATH | tr ':' '\n'
          echo "=== pnpm ==="
          which pnpm
          pnpm -v
          echo "=== 文件位置 ==="
          ls -l $(which pnpm)
          ls -l $PNPM_HOME/pnpm

      # ===== 前端构建 =====
      - name: Build UI
        working-directory: ./ui
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      # ===== 后端构建 =====
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR with Gradle
        run: |
          chmod +x gradlew
          ./gradlew :application:bootJar -x test
          ls -lh application/build/libs/*.jar

      # ===== 容器构建 =====
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          build-args: |
            JAR_FILE=application/build/libs/*.jar
