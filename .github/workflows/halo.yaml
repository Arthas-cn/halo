name: Build and Push Halo Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: arthascnhub/arthasdevhalo
  VERSION: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ===== 前端构建（保持与 Dockerfile 兼容）=====
      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm 9
        run: corepack enable && corepack prepare pnpm@9.0.0 --activate

      - name: Build UI
        working-directory: ./ui
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      # ===== 后端构建（完全兼容现有 Dockerfile）=====
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR with Gradle
        run: |
          chmod +x gradlew
          ./gradlew :application:bootJar -x test
          ls -lh application/build/libs/*.jar

      # ===== 容器构建（保持 Dockerfile 原样）=====
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          build-args:
            JAR_FILE: "application/build/libs/*.jar"  # 完全匹配现有 Dockerfile 参数
